function Noise = Noise_extraction(order, coefficients, signal, lengthData, repetitions)
% Noise_extraction - Extracts noise from a signal using a predictive model.
%   This function extracts noise from a signal using a predictive model
%   based on autoregressive (AR) coefficients.
%
%   Inputs:
%     - order: Order of the autoregressive model
%     - coefficients: Matrix of autoregressive coefficients
%     - signal: Input signal
%     - lengthData: Length of the input data
%     - repetitions: Number of repetitions
%
%   Output:
%     - Noise: Extracted noise

    % Initialize variables
    numPeriods = order + 1;
    % Initialize noise vector
    Noise = zeros(repetitions * lengthData, 1);
    
    % Iterate through each repetition
    for rep = 1:repetitions
        % Adjust repetition index
        repetitionIndex = 1;
        if -order + 1 + repetitions * repetitionIndex >= order + 1
            repetitionIndex = repetitionIndex;
        else
            repetitionIndex = repetitionIndex + 1;
        end
        
        % Initialize period index
        periodIndex = order + 1;
        
        % Construct noise vector for current repetition
        for i = 1:repetitions * lengthData - order
            if periodIndex == repetitions + 1
                periodIndex = 1;
            end
            for j = 1:order + 1
                % Populate Q matrix with coefficients
                Q_Matrix(i, i + j - 1) = -coefficients(order + 1 - j + 1, periodIndex);
            end
            periodIndex = periodIndex + 1;
        end
        
        % Slice Q matrix to appropriate size
        Q_Matrix1 = Q_Matrix(:, order + 1:end);
        
        % Calculate noise for current repetition
        Noise(order + 1:repetitions * lengthData, 1) = Q_Matrix1 * signal(order + 1:repetitions * lengthData, 1);
        
        % Calculate noise for initial periods
        for j = 1:order
            % Flip coefficients for current period
            flippedCoefficients = flip(coefficients(2:order + 1, j));
            % Calculate noise using dot product
            Noise(j, 1) = -dot(signal(repetitionIndex * repetitions - order + j:repetitionIndex * repetitions - 1 + j), flippedCoefficients) + signal(j, 1);
        end
    end
end
